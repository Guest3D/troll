--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do
	local v0;
	local v1;
	local v2;
	local v3;
	local v4;
	local v5;
	local v6;
	local v7;
	local v8;
	local v9;
	local v10;
	local v11;
	local v12;
	local v13;
	local v14;
	local v15;
	local v16;
	local v17;
	local v18;
	local v19;
	local v20;
	local v21;
	local v22;
	local v23;
	local v24 = 0;
	while true do
		if (v24 == 1) then
			v4 = v3.bxor;
			v5 = table.concat;
			v6 = table.insert;
			v7 = nil;
			v24 = 2;
		end
		if (v24 == 0) then
			v0 = string.char;
			v1 = string.byte;
			v2 = string.sub;
			v3 = bit32 or bit;
			v24 = 1;
		end
		if (v24 == 5) then
			v19 = _G[v7("\18\18\74\70\55", "\98\113\43\42\91\230\143\96")];
			v20 = _G[v7("\23\162\255\230\46\240", "\100\199\147\131\77\132")];
			v21 = _G[v7("\222\1\79\237\36\241", "\171\111\63\140\71\154")] or _G[v7("\82\35\229\26\67", "\38\66\135\118")][v7("\69\10\109\242\74\91", "\48\100\29\147\41")];
			v22 = _G[v7("\216\208\121\86\38\160\234\214", "\172\191\23\35\75\194\143\164")];
			v24 = 6;
		end
		if (v24 == 4) then
			v15 = _G[v7("\43\177\62\70\214", "\95\208\92\42\179\237")][v7("\4\17\80\208\239\85", "\109\127\35\181\157\33\164\126")];
			v16 = _G[v7("\166\32\71\220", "\203\65\51\180")][v7("\60\113\177\7\206", "\80\21\212\127\190")];
			v17 = _G[v7("\235\86\34\210\233\93\32", "\140\51\86\180")] or function()
				return _ENV;
			end;
			v18 = _G[v7("\150\128\193\137\228\187\132\145\212\134\237\170", "\229\229\181\228\129\207")];
			v24 = 5;
		end
		if (v24 == 6) then
			v23 = nil;
			v23 = function(v31, v32, ...)
				local v35 = 0;
				local v36;
				local v37;
				local v38;
				local v39;
				local v40;
				local v41;
				local v42;
				local v43;
				local v44;
				local v45;
				local v46;
				local v47;
				local v48;
				while true do
					if (v35 == 3) then
						v45 = nil;
						v46 = nil;
						v47 = nil;
						v35 = 4;
					end
					if (v35 == 1) then
						v39 = nil;
						v40 = nil;
						v41 = nil;
						v35 = 2;
					end
					if (v35 == 2) then
						v42 = nil;
						v43 = nil;
						v44 = nil;
						v35 = 3;
					end
					if (v35 == 0) then
						v36 = 0;
						v37 = nil;
						v38 = nil;
						v35 = 1;
					end
					if (v35 == 4) then
						v48 = nil;
						while true do
							local v51 = 0;
							while true do
								if (v51 == 1) then
									if (v36 == 1) then
										local v53 = 0;
										while true do
											if (v53 == 1) then
												v40 = function()
													local v67 = 0;
													local v68;
													local v69;
													while true do
														if (v67 == 0) then
															v68 = 0;
															v69 = nil;
															v67 = 1;
														end
														if (1 == v67) then
															while true do
																local v116 = 0;
																while true do
																	if (v116 == 0) then
																		if (v68 == (0 + 0)) then
																			local v126 = 0;
																			while true do
																				if (v126 == 1) then
																					v68 = 1 + 0;
																					break;
																				end
																				if (v126 == 0) then
																					v69 = v9(v31, v37, v37);
																					v37 = v37 + ((3891 - (11098 - 8103)) - (39 + 202 + 444 + 210));
																					v126 = 1;
																				end
																			end
																		end
																		if ((1715 - (1565 + 149)) == v68) then
																			return v69;
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v41 = nil;
												v53 = 2;
											end
											if (v53 == 2) then
												v36 = 2;
												break;
											end
											if (v53 == 0) then
												v39 = function(v59, v60, v61)
													if v61 then
														local v105 = 0;
														local v106;
														local v107;
														while true do
															if (v105 == 1) then
																while true do
																	if (v106 == 0) then
																		local v123 = 0;
																		while true do
																			if (v123 == 0) then
																				v107 = (v59 / (((1 + 4) - 3) ^ (v60 - (1 + 0 + 0)))) % (((615 - 329) - ((1599 - (422 + 1033)) + (1905 - (318 + 1447)))) ^ (((v61 - 1) - (v60 - ((3599 - 2001) - ((2589 - 1262) + (93 - 33) + 210)))) + (1420 - (877 + 542)) + 0));
																				return v107 - (v107 % (1 + 0));
																			end
																		end
																	end
																end
																break;
															end
															if (v105 == 0) then
																v106 = 0 - 0;
																v107 = nil;
																v105 = 1;
															end
														end
													else
														local v108 = 0;
														local v109;
														local v110;
														while true do
															if (v108 == 1) then
																while true do
																	if (v109 == 0) then
																		local v124 = 0;
																		while true do
																			if (v124 == 0) then
																				v110 = 2 ^ (v60 - (1 + (0 - 0)));
																				return (((v59 % (v110 + v110)) >= v110) and ((939 - 571) - ((906 - (2162 - (348 + 1223))) + 52))) or ((21 + (102 - 76)) - (32 + ((5896 - 4059) - ((2816 - (796 + 1038)) + 840))));
																			end
																		end
																	end
																end
																break;
															end
															if (v108 == 0) then
																v109 = 0 + 0;
																v110 = nil;
																v108 = 1;
															end
														end
													end
												end;
												v40 = nil;
												v53 = 1;
											end
										end
									end
									if (v36 == 2) then
										local v54 = 0;
										while true do
											if (v54 == 0) then
												v41 = function()
													local v70 = 0;
													local v71;
													local v72;
													local v73;
													while true do
														if (v70 == 1) then
															v73 = nil;
															while true do
																local v117 = 0;
																while true do
																	if (0 == v117) then
																		if (v71 == 0) then
																			local v127 = 0;
																			while true do
																				if (v127 == 0) then
																					v72, v73 = v9(v31, v37, v37 + (1363 - ((348 - 189) + 1203)) + ((1647 - (528 + 167)) - (140 + 811)));
																					v37 = v37 + 2 + 0 + ((187 + 111) - (30 + 7 + (615 - 354)));
																					v127 = 1;
																				end
																				if (v127 == 1) then
																					v71 = 1;
																					break;
																				end
																			end
																		end
																		if ((1 - 0) == v71) then
																			return (v73 * (19 + 5 + 232)) + v72;
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v70 == 0) then
															v71 = 0 + 0;
															v72 = nil;
															v70 = 1;
														end
													end
												end;
												v42 = nil;
												v54 = 1;
											end
											if (v54 == 1) then
												v42 = function()
													local v74 = 0;
													local v75;
													local v76;
													local v77;
													local v78;
													local v79;
													while true do
														if (v74 == 1) then
															v77 = nil;
															v78 = nil;
															v74 = 2;
														end
														if (v74 == 2) then
															v79 = nil;
															while true do
																local v118 = 0;
																while true do
																	if (v118 == 0) then
																		if (v75 == 1) then
																			return (v79 * (((15393189 + 9197028) - (312 + (1191 - (100 + 130)))) - ((34469888 - 12625806) - (5978331 + 8054023)))) + (v78 * ((68858 - (273 + 458 + 698)) - (785 + 158 + (1161 - 211)))) + (v77 * 256) + v76;
																		end
																		if (v75 == 0) then
																			local v128 = 0;
																			while true do
																				if (v128 == 1) then
																					v75 = 1;
																					break;
																				end
																				if (v128 == 0) then
																					v76, v77, v78, v79 = v9(v31, v37, v37 + (9 - (6 + 0)));
																					v37 = v37 + (1328 - (51 + 1011 + 262));
																					v128 = 1;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v74 == 0) then
															v75 = 0;
															v76 = nil;
															v74 = 1;
														end
													end
												end;
												v43 = nil;
												v54 = 2;
											end
											if (v54 == 2) then
												v36 = 3;
												break;
											end
										end
									end
									v51 = 2;
								end
								if (v51 == 0) then
									if (v36 == 5) then
										local v55 = 0;
										while true do
											if (v55 == 1) then
												return v48(v47(), {}, v32)(...);
											end
											if (v55 == 0) then
												v48 = nil;
												v48 = function(v62, v63, v64)
													local v80 = 0;
													local v81;
													local v82;
													local v83;
													local v84;
													while true do
														if (v80 == 1) then
															v83 = nil;
															v84 = nil;
															v80 = 2;
														end
														if (0 == v80) then
															v81 = 0;
															v82 = nil;
															v80 = 1;
														end
														if (v80 == 2) then
															while true do
																local v119 = 0;
																while true do
																	if (v119 == 0) then
																		if (v81 == 0) then
																			local v129 = 0;
																			while true do
																				if (0 == v129) then
																					v82 = v62[(1358 - (26 + 1328)) - (4 - 1)];
																					v83 = v62[434 - (377 + 55)];
																					v129 = 1;
																				end
																				if (v129 == 1) then
																					v81 = 1;
																					break;
																				end
																			end
																		end
																		if (v81 == 1) then
																			local v130 = 0;
																			while true do
																				if (v130 == 0) then
																					v84 = v62[566 - (199 + 364)];
																					return function(...)
																						local v149 = 0;
																						local v150;
																						local v151;
																						local v152;
																						local v153;
																						local v154;
																						local v155;
																						while true do
																							if (v149 == 0) then
																								v150 = 0;
																								v151 = nil;
																								v149 = 1;
																							end
																							if (1 == v149) then
																								v152 = nil;
																								v153 = nil;
																								v149 = 2;
																							end
																							if (v149 == 2) then
																								v154 = nil;
																								v155 = nil;
																								v149 = 3;
																							end
																							if (v149 == 3) then
																								while true do
																									if (v150 == 0) then
																										local v176 = 0;
																										while true do
																											if (v176 == 1) then
																												v150 = 1;
																												break;
																											end
																											if (v176 == 0) then
																												v151 = 2 - 1;
																												v152 = -(1 + 0);
																												v176 = 1;
																											end
																										end
																									end
																									if (v150 == 2) then
																										local v177 = 0;
																										while true do
																											if (1 == v177) then
																												v150 = 3;
																												break;
																											end
																											if (v177 == 0) then
																												v155 = nil;
																												v155 = function()
																													local v190 = 0;
																													local v191;
																													local v192;
																													local v193;
																													local v194;
																													local v195;
																													local v196;
																													local v197;
																													local v198;
																													local v199;
																													local v200;
																													while true do
																														if (v190 == 0) then
																															v191 = v82;
																															v192 = v83;
																															v193 = v84;
																															v190 = 1;
																														end
																														if (2 == v190) then
																															v197 = {};
																															for v201 = 0 + 0, v154 do
																																if (v201 >= v193) then
																																	v195[v201 - v193] = v153[v201 + (241 - (150 + 90))];
																																else
																																	v197[v201] = v153[v201 + (188 - (15 + 172))];
																																end
																															end
																															v198 = (v154 - v193) + 1;
																															v190 = 3;
																														end
																														if (v190 == 1) then
																															v194 = v46;
																															v195 = {};
																															v196 = {};
																															v190 = 2;
																														end
																														if (v190 == 3) then
																															v199 = nil;
																															v200 = nil;
																															while true do
																																local v202 = 0;
																																local v203;
																																while true do
																																	if (v202 == 0) then
																																		v203 = 0;
																																		while true do
																																			if (v203 == 0) then
																																				local v220 = 0;
																																				while true do
																																					if (v220 == 0) then
																																						v199 = v191[v151];
																																						v200 = v199[1 + 0];
																																						v220 = 1;
																																					end
																																					if (v220 == 1) then
																																						v203 = 1;
																																						break;
																																					end
																																				end
																																			end
																																			if (1 == v203) then
																																				if (v200 <= (36 - 16)) then
																																					if (v200 <= ((269 - (89 + 103)) - (29 + 18 + (59 - 38)))) then
																																						if (v200 <= 4) then
																																							if (v200 <= (1 - 0)) then
																																								if (v200 == (0 - 0)) then
																																									v197[v199[(795 - (19 + 112)) - (373 + 47 + 242)]] = v197[v199[(175 + 206) - ((157 - 99) + (1125 - 805))]] % v197[v199[14 - 10]];
																																								else
																																									local v230 = 0;
																																									local v231;
																																									local v232;
																																									while true do
																																										if (v230 == 0) then
																																											v231 = 0;
																																											v232 = nil;
																																											v230 = 1;
																																										end
																																										if (v230 == 1) then
																																											while true do
																																												if (v231 == 0) then
																																													v232 = v199[1 + 1];
																																													v197[v232](v21(v197, v232 + (2 - 1), v152));
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								end
																																							elseif (v200 <= (1551 - (647 + 902))) then
																																								local v233 = 0;
																																								local v234;
																																								local v235;
																																								local v236;
																																								local v237;
																																								local v238;
																																								while true do
																																									if (0 == v233) then
																																										v234 = 0;
																																										v235 = nil;
																																										v233 = 1;
																																									end
																																									if (v233 == 1) then
																																										v236 = nil;
																																										v237 = nil;
																																										v233 = 2;
																																									end
																																									if (v233 == 2) then
																																										v238 = nil;
																																										while true do
																																											if (v234 == 2) then
																																												for v350 = v235, v152 do
																																													local v351 = 0;
																																													local v352;
																																													while true do
																																														if (v351 == 0) then
																																															v352 = 0;
																																															while true do
																																																if (v352 == 0) then
																																																	v238 = v238 + (2 - 1);
																																																	v197[v350] = v236[v238];
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																											if (v234 == 0) then
																																												local v336 = 0;
																																												while true do
																																													if (v336 == 0) then
																																														v235 = v199[3 - 1];
																																														v236, v237 = v194(v197[v235](v21(v197, v235 + 1 + 0, v199[4 - 1])));
																																														v336 = 1;
																																													end
																																													if (v336 == 1) then
																																														v234 = 1;
																																														break;
																																													end
																																												end
																																											end
																																											if (v234 == 1) then
																																												local v337 = 0;
																																												while true do
																																													if (v337 == 0) then
																																														v152 = (v237 + v235) - ((1926 - (49 + 1876)) - (92 - (52 + 40)));
																																														v238 = 1945 - ((711 - (64 + 558)) + (2296 - (145 + 295)));
																																														v337 = 1;
																																													end
																																													if (v337 == 1) then
																																														v234 = 2;
																																														break;
																																													end
																																												end
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							elseif (v200 > 3) then
																																								local v278 = 0;
																																								local v279;
																																								local v280;
																																								while true do
																																									if (v278 == 0) then
																																										v279 = 0;
																																										v280 = nil;
																																										v278 = 1;
																																									end
																																									if (v278 == 1) then
																																										while true do
																																											if (v279 == 0) then
																																												v280 = v199[2];
																																												v197[v280] = v197[v280]();
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							else
																																								v197[v199[1 + 1]] = v197[v199[3 + 0 + 0 + 0]];
																																							end
																																						elseif (v200 <= (17 - 11)) then
																																							if (v200 > ((29 - 20) - (7 - 3))) then
																																								v197[v199[2]] = v48(v192[v199[3]], nil, v64);
																																							else
																																								v197[v199[(3 + 0) - 1]]();
																																							end
																																						elseif (v200 <= 7) then
																																							local v240 = 0;
																																							local v241;
																																							local v242;
																																							local v243;
																																							while true do
																																								if (v240 == 0) then
																																									v241 = 0;
																																									v242 = nil;
																																									v240 = 1;
																																								end
																																								if (v240 == 1) then
																																									v243 = nil;
																																									while true do
																																										if (v241 == 0) then
																																											local v338 = 0;
																																											while true do
																																												if (v338 == 1) then
																																													v241 = 1;
																																													break;
																																												end
																																												if (v338 == 0) then
																																													v242 = v199[354 - (49 + (807 - 504))];
																																													v243 = v197[v242];
																																													v338 = 1;
																																												end
																																											end
																																										end
																																										if (v241 == 1) then
																																											for v353 = v242 + 1, v199[(4 + 3) - (1 + 3)] do
																																												v15(v243, v197[v353]);
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						elseif (v200 == 8) then
																																							v151 = v199[3];
																																						else
																																							local v284 = 0;
																																							local v285;
																																							local v286;
																																							local v287;
																																							local v288;
																																							while true do
																																								if (v284 == 1) then
																																									v287 = nil;
																																									v288 = nil;
																																									v284 = 2;
																																								end
																																								if (v284 == 2) then
																																									while true do
																																										if (v285 == 2) then
																																											for v377 = 1845 - (236 + 1608), v199[6 - 2] do
																																												local v378 = 0;
																																												local v379;
																																												local v380;
																																												while true do
																																													if (1 == v378) then
																																														while true do
																																															if (v379 == 1) then
																																																if (v380[(1 - 0) + 0] == (5 - 2)) then
																																																	v288[v377 - (1670 - (240 + 533 + 896))] = {v197,v380[1967 - (1593 + 371)]};
																																																else
																																																	v288[v377 - ((2 - 1) - 0)] = {v63,v380[2 + 0 + 1 + 0]};
																																																end
																																																v196[#v196 + (3 - (2 + 0))] = v288;
																																																break;
																																															end
																																															if (v379 == 0) then
																																																local v419 = 0;
																																																while true do
																																																	if (v419 == 0) then
																																																		v151 = v151 + ((7 - 4) - (2 + 0));
																																																		v380 = v191[v151];
																																																		v419 = 1;
																																																	end
																																																	if (v419 == 1) then
																																																		v379 = 1;
																																																		break;
																																																	end
																																																end
																																															end
																																														end
																																														break;
																																													end
																																													if (v378 == 0) then
																																														v379 = 0;
																																														v380 = nil;
																																														v378 = 1;
																																													end
																																												end
																																											end
																																											v197[v199[2]] = v48(v286, v287, v64);
																																											break;
																																										end
																																										if (v285 == 0) then
																																											local v360 = 0;
																																											while true do
																																												if (v360 == 0) then
																																													v286 = v192[v199[3 + 0]];
																																													v287 = nil;
																																													v360 = 1;
																																												end
																																												if (v360 == 1) then
																																													v285 = 1;
																																													break;
																																												end
																																											end
																																										end
																																										if (v285 == 1) then
																																											local v361 = 0;
																																											while true do
																																												if (v361 == 1) then
																																													v285 = 2;
																																													break;
																																												end
																																												if (v361 == 0) then
																																													v288 = {};
																																													v287 = v18({}, {[v7("\63\68\82\201\162\11\166", "\96\27\59\167\198\110\222\52")]=function(v392, v393)
																																														local v402 = 0;
																																														local v403;
																																														local v404;
																																														while true do
																																															if (v402 == 1) then
																																																while true do
																																																	if (v403 == 0) then
																																																		local v427 = 0;
																																																		while true do
																																																			if (v427 == 0) then
																																																				v404 = v288[v393];
																																																				return v404[280 - (6 + 136 + (1364 - (801 + 426)))][v404[3 - 1]];
																																																			end
																																																		end
																																																	end
																																																end
																																																break;
																																															end
																																															if (v402 == 0) then
																																																v403 = 0;
																																																v404 = nil;
																																																v402 = 1;
																																															end
																																														end
																																													end,[v7("\24\228\213\220\107\40\233\35\222\195", "\71\187\187\185\28\65\135")]=function(v392, v393, v394)
																																														local v405 = 0;
																																														local v406;
																																														local v407;
																																														while true do
																																															if (v405 == 1) then
																																																while true do
																																																	if (v406 == 0) then
																																																		v407 = v288[v393];
																																																		v407[1 + 0][v407[2]] = v394;
																																																		break;
																																																	end
																																																end
																																																break;
																																															end
																																															if (v405 == 0) then
																																																v406 = 0;
																																																v407 = nil;
																																																v405 = 1;
																																															end
																																														end
																																													end});
																																													v361 = 1;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v284 == 0) then
																																									v285 = 0;
																																									v286 = nil;
																																									v284 = 1;
																																								end
																																							end
																																						end
																																					elseif (v200 <= (6 + 8)) then
																																						if (v200 <= (1389 - (879 + 499))) then
																																							if (v200 > 10) then
																																								for v274 = v199[2], v199[1109 - ((1293 - (125 + 302)) + 240)] do
																																									v197[v274] = nil;
																																								end
																																							else
																																								local v244 = 0;
																																								local v245;
																																								local v246;
																																								local v247;
																																								local v248;
																																								while true do
																																									if (0 == v244) then
																																										v245 = 0;
																																										v246 = nil;
																																										v244 = 1;
																																									end
																																									if (v244 == 2) then
																																										while true do
																																											if (0 == v245) then
																																												local v339 = 0;
																																												while true do
																																													if (0 == v339) then
																																														v246 = v199[(1659 - (377 + 1275)) - (22 - 17)];
																																														v247 = v197[v246];
																																														v339 = 1;
																																													end
																																													if (v339 == 1) then
																																														v245 = 1;
																																														break;
																																													end
																																												end
																																											end
																																											if (v245 == 1) then
																																												v248 = v199[1020 - (641 + 376)];
																																												for v354 = 1 + (1311 - (772 + 539)), v248 do
																																													v247[v354] = v197[v246 + v354];
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v244 == 1) then
																																										v247 = nil;
																																										v248 = nil;
																																										v244 = 2;
																																									end
																																								end
																																							end
																																						elseif (v200 <= (8 + 4)) then
																																							if (v197[v199[2 - 0]] == v199[1524 - (13 + 1288 + (295 - (63 + 13)))]) then
																																								v151 = v151 + (2 - 1);
																																							else
																																								v151 = v199[1557 - (463 + 1091)];
																																							end
																																						elseif (v200 == 13) then
																																							if (v199[2 + 0] == v197[v199[4 + 0]]) then
																																								v151 = v151 + (478 - (459 + 18));
																																							else
																																								v151 = v199[(11 + 2) - (544 - (157 + 377))];
																																							end
																																						else
																																							v197[v199[2]] = v64[v199[(1254 - (858 + 393)) + 0 + 0]];
																																						end
																																					elseif (v200 <= 17) then
																																						if (v200 <= 15) then
																																							v64[v199[14 - 11]] = v197[v199[2]];
																																						elseif (v200 == (38 - 22)) then
																																							local v292 = 0;
																																							local v293;
																																							local v294;
																																							local v295;
																																							local v296;
																																							local v297;
																																							while true do
																																								if (v292 == 2) then
																																									v297 = nil;
																																									while true do
																																										if (2 == v293) then
																																											for v383 = v294, v152 do
																																												local v384 = 0;
																																												local v385;
																																												while true do
																																													if (v384 == 0) then
																																														v385 = 0;
																																														while true do
																																															if (v385 == 0) then
																																																v297 = v297 + (3 - 2);
																																																v197[v383] = v295[v297];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																										if (0 == v293) then
																																											local v362 = 0;
																																											while true do
																																												if (0 == v362) then
																																													v294 = v199[2];
																																													v295, v296 = v194(v197[v294](v21(v197, v294 + (1437 - (1426 + 10)) + (0 - 0), v152)));
																																													v362 = 1;
																																												end
																																												if (v362 == 1) then
																																													v293 = 1;
																																													break;
																																												end
																																											end
																																										end
																																										if (v293 == 1) then
																																											local v363 = 0;
																																											while true do
																																												if (v363 == 0) then
																																													v152 = (v296 + v294) - (1 + 0);
																																													v297 = 0;
																																													v363 = 1;
																																												end
																																												if (v363 == 1) then
																																													v293 = 2;
																																													break;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v292 == 1) then
																																									v295 = nil;
																																									v296 = nil;
																																									v292 = 2;
																																								end
																																								if (v292 == 0) then
																																									v293 = 0;
																																									v294 = nil;
																																									v292 = 1;
																																								end
																																							end
																																						elseif v197[v199[2 + 0]] then
																																							v151 = v151 + 1 + 0;
																																						else
																																							v151 = v199[491 - (299 + 189)];
																																						end
																																					elseif (v200 <= (46 - (27 + 1))) then
																																						local v251 = 0;
																																						local v252;
																																						local v253;
																																						while true do
																																							if (v251 == 1) then
																																								while true do
																																									if (v252 == 0) then
																																										v253 = v199[3 - (1 + 0)];
																																										v197[v253] = v197[v253](v21(v197, v253 + (2 - 1), v152));
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v251 == 0) then
																																								v252 = 0;
																																								v253 = nil;
																																								v251 = 1;
																																							end
																																						end
																																					elseif (v200 == ((178 - 121) - (8 + 30))) then
																																						v197[v199[6 - 4]] = v197[v199[1 + 0 + 2]][v197[v199[4]]];
																																					else
																																						local v300 = 0;
																																						local v301;
																																						local v302;
																																						local v303;
																																						local v304;
																																						local v305;
																																						while true do
																																							if (v300 == 1) then
																																								v303 = nil;
																																								v304 = nil;
																																								v300 = 2;
																																							end
																																							if (v300 == 0) then
																																								v301 = 0;
																																								v302 = nil;
																																								v300 = 1;
																																							end
																																							if (v300 == 2) then
																																								v305 = nil;
																																								while true do
																																									if (v301 == 1) then
																																										local v364 = 0;
																																										while true do
																																											if (1 == v364) then
																																												v301 = 2;
																																												break;
																																											end
																																											if (v364 == 0) then
																																												v152 = (v304 + v302) - 1;
																																												v305 = 0 + 0;
																																												v364 = 1;
																																											end
																																										end
																																									end
																																									if (v301 == 0) then
																																										local v365 = 0;
																																										while true do
																																											if (v365 == 1) then
																																												v301 = 1;
																																												break;
																																											end
																																											if (v365 == 0) then
																																												v302 = v199[2 + 0];
																																												v303, v304 = v194(v197[v302](v197[v302 + ((1437 - 566) - (50 + 352 + 238 + 230))]));
																																												v365 = 1;
																																											end
																																										end
																																									end
																																									if (v301 == 2) then
																																										for v386 = v302, v152 do
																																											local v387 = 0;
																																											local v388;
																																											while true do
																																												if (0 == v387) then
																																													v388 = 0;
																																													while true do
																																														if (v388 == 0) then
																																															v305 = v305 + (1105 - (286 + 818));
																																															v197[v386] = v303[v305];
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					end
																																				elseif (v200 <= (118 - 87)) then
																																					if (v200 <= ((3211 - (414 + 1074)) - ((3521 - 2430) + 607))) then
																																						if (v200 <= ((8 - 2) + (38 - 22))) then
																																							if (v200 > (15 + 6)) then
																																								v197[v199[468 - (51 + 415)]][v197[v199[(1900 - (445 + 1454)) + (7 - 5)]]] = v197[v199[15 - 11]];
																																							else
																																								v197[v199[(853 - (295 + 552)) - (1437 - (1286 + 147))]] = v197[v199[3]] % v199[13 - 9];
																																							end
																																						elseif (v200 <= 23) then
																																							v197[v199[1 + 1]] = v197[v199[3]][v199[223 - (10 + 209)]];
																																						elseif (v200 == ((102 - (45 + 54)) + 21)) then
																																							v197[v199[2]] = v199[1 + 2] + v197[v199[(39 - 25) - 10]];
																																						else
																																							v197[v199[3 - 1]] = v63[v199[3 + 0]];
																																						end
																																					elseif (v200 <= ((1610 - (713 + 837)) - (32 + 0))) then
																																						if (v200 <= (2 + 15 + (29 - 20))) then
																																							local v259 = 0;
																																							local v260;
																																							local v261;
																																							while true do
																																								if (v259 == 0) then
																																									v260 = 0;
																																									v261 = nil;
																																									v259 = 1;
																																								end
																																								if (v259 == 1) then
																																									while true do
																																										if (v260 == 0) then
																																											v261 = v199[2];
																																											v197[v261](v21(v197, v261 + ((1 - 0) - (0 + 0)), v199[9 - (1187 - (463 + 718))]));
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						elseif (v200 == (12 + (855 - (86 + 754)))) then
																																							local v309 = 0;
																																							local v310;
																																							local v311;
																																							while true do
																																								if (v309 == 0) then
																																									v310 = 0;
																																									v311 = nil;
																																									v309 = 1;
																																								end
																																								if (v309 == 1) then
																																									while true do
																																										if (0 == v310) then
																																											v311 = v199[3 - (1 + 0)];
																																											v197[v311] = v197[v311](v197[v311 + ((578 - 269) - ((927 - (324 + 592)) + 261 + 36))]);
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						else
																																							v197[v199[343 - (48 + 293)]] = v199[1 + 2] ~= (0 - (0 - 0));
																																						end
																																					elseif (v200 <= (1753 - (380 + 1344))) then
																																						v197[v199[1 + 1]] = #v197[v199[3]];
																																					elseif (v200 == 30) then
																																						if not v197[v199[2 + 0 + (0 - 0)]] then
																																							v151 = v151 + ((1 + 1) - (1 + 0));
																																						else
																																							v151 = v199[1 + 0 + 2];
																																						end
																																					else
																																						local v313 = 0;
																																						local v314;
																																						local v315;
																																						local v316;
																																						local v317;
																																						while true do
																																							if (v313 == 0) then
																																								v314 = 0;
																																								v315 = nil;
																																								v313 = 1;
																																							end
																																							if (v313 == 1) then
																																								v316 = nil;
																																								v317 = nil;
																																								v313 = 2;
																																							end
																																							if (v313 == 2) then
																																								while true do
																																									if (1 == v314) then
																																										local v368 = 0;
																																										while true do
																																											if (v368 == 1) then
																																												v314 = 2;
																																												break;
																																											end
																																											if (v368 == 0) then
																																												v317 = v197[v315] + v316;
																																												v197[v315] = v317;
																																												v368 = 1;
																																											end
																																										end
																																									end
																																									if (v314 == 0) then
																																										local v369 = 0;
																																										while true do
																																											if (v369 == 1) then
																																												v314 = 1;
																																												break;
																																											end
																																											if (v369 == 0) then
																																												v315 = v199[1 + 1];
																																												v316 = v197[v315 + 2];
																																												v369 = 1;
																																											end
																																										end
																																									end
																																									if (v314 == 2) then
																																										if (v316 > (0 + 0 + 0 + 0)) then
																																											if (v317 <= v197[v315 + (3 - 2) + (605 - (118 + 487))]) then
																																												local v408 = 0;
																																												local v409;
																																												while true do
																																													if (v408 == 0) then
																																														v409 = 0;
																																														while true do
																																															if (v409 == 0) then
																																																v151 = v199[(347 + 571) - (53 + 308 + (1897 - 1343))];
																																																v197[v315 + ((4 + 4) - 5)] = v317;
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																										elseif (v317 >= v197[v315 + (1627 - (1614 + 12))]) then
																																											local v410 = 0;
																																											local v411;
																																											while true do
																																												if (v410 == 0) then
																																													v411 = 0;
																																													while true do
																																														if (v411 == 0) then
																																															v151 = v199[3 + 0];
																																															v197[v315 + (1070 - (32 + 1035))] = v317;
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					end
																																				elseif (v200 <= ((98 - 63) + 1 + 0)) then
																																					if (v200 <= (47 - 14)) then
																																						if (v200 == (13 + (60 - 41))) then
																																							local v263 = 0;
																																							local v264;
																																							local v265;
																																							local v266;
																																							while true do
																																								if (v263 == 1) then
																																									v266 = nil;
																																									while true do
																																										if (v264 == 0) then
																																											local v344 = 0;
																																											while true do
																																												if (v344 == 1) then
																																													v264 = 1;
																																													break;
																																												end
																																												if (v344 == 0) then
																																													v265 = v199[2 - 0];
																																													v266 = v197[v199[3]];
																																													v344 = 1;
																																												end
																																											end
																																										end
																																										if (v264 == 1) then
																																											v197[v265 + ((1686 - 570) - ((1675 - 1045) + (1259 - 774)))] = v266;
																																											v197[v265] = v266[v199[1935 - (470 + (6511 - 5050))]];
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (0 == v263) then
																																									v264 = 0;
																																									v265 = nil;
																																									v263 = 1;
																																								end
																																							end
																																						else
																																							v197[v199[(3 + 1) - 2]] = {};
																																						end
																																					elseif (v200 <= (6 + 3 + (58 - 33))) then
																																						v197[v199[1 + 0 + 1]] = v199[(39 + 191) - (108 + (750 - (97 + 534)))];
																																					elseif (v200 == (18 + 17)) then
																																						do
																																							return;
																																						end
																																					else
																																						local v318 = 0;
																																						local v319;
																																						local v320;
																																						local v321;
																																						local v322;
																																						while true do
																																							if (v318 == 0) then
																																								v319 = 0;
																																								v320 = nil;
																																								v318 = 1;
																																							end
																																							if (v318 == 2) then
																																								while true do
																																									if (0 == v319) then
																																										local v370 = 0;
																																										while true do
																																											if (1 == v370) then
																																												v319 = 1;
																																												break;
																																											end
																																											if (v370 == 0) then
																																												v320 = v199[2 + 0];
																																												v321 = v197[v320];
																																												v370 = 1;
																																											end
																																										end
																																									end
																																									if (v319 == 1) then
																																										v322 = v197[v320 + 2 + (0 - 0)];
																																										if (v322 > (0 + 0)) then
																																											if (v321 > v197[v320 + ((1088 + 622) - (1131 + 578))]) then
																																												v151 = v199[428 - (259 + 166)];
																																											else
																																												v197[v320 + ((904 + 87) - (8 + 72 + (1195 - (67 + 220))))] = v321;
																																											end
																																										elseif (v321 < v197[v320 + (2 - 1)]) then
																																											v151 = v199[3];
																																										else
																																											v197[v320 + 3] = v321;
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v318 == 1) then
																																								v321 = nil;
																																								v322 = nil;
																																								v318 = 2;
																																							end
																																						end
																																					end
																																				elseif (v200 <= ((171 - 78) - 54)) then
																																					if (v200 <= (124 - 87)) then
																																						local v270 = 0;
																																						local v271;
																																						local v272;
																																						while true do
																																							if (v270 == 1) then
																																								while true do
																																									if (v271 == 0) then
																																										v272 = v199[1551 - (935 + 614)];
																																										v197[v272] = v197[v272](v21(v197, v272 + (1 - 0), v199[1940 - (45 + 1892)]));
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v270 == 0) then
																																								v271 = 0;
																																								v272 = nil;
																																								v270 = 1;
																																							end
																																						end
																																					elseif (v200 == 38) then
																																						local v323 = 0;
																																						local v324;
																																						local v325;
																																						while true do
																																							if (v323 == 0) then
																																								v324 = 0;
																																								v325 = nil;
																																								v323 = 1;
																																							end
																																							if (v323 == 1) then
																																								while true do
																																									if (v324 == 0) then
																																										v325 = v199[2 + 0];
																																										do
																																											return v197[v325](v21(v197, v325 + 1, v199[3]));
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					else
																																						local v326 = 0;
																																						local v327;
																																						local v328;
																																						while true do
																																							if (v326 == 0) then
																																								v327 = 0;
																																								v328 = nil;
																																								v326 = 1;
																																							end
																																							if (v326 == 1) then
																																								while true do
																																									if (v327 == 0) then
																																										v328 = v199[1266 - (119 + 17 + 1128)];
																																										do
																																											return v21(v197, v328, v152);
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					end
																																				elseif (v200 <= (156 - (230 - (7 + 107)))) then
																																					v197[v199[(2 - 1) + 1 + 0]] = v197[v199[3]] - v199[(59 - 47) - (7 + 1)];
																																				elseif (v200 == ((27 + 48) - (33 + 1))) then
																																					v197[v199[2 - (0 + 0)]] = v197[v199[(5 - 3) + (229 - (188 + 40))]] + v199[(3 + 7) - 6];
																																				else
																																					v197[v199[490 - (352 + 136)]][v197[v199[5 - 2]]] = v199[(617 - 344) - (117 + (291 - 139))];
																																				end
																																				v151 = v151 + (2 - 1);
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															break;
																														end
																													end
																												end;
																												v177 = 1;
																											end
																										end
																									end
																									if (v150 == 3) then
																										_G['A'], _G['B'] = v46(v19(v155));
																										if not _G['A'][1] then
																											local v182 = 0;
																											local v183;
																											local v184;
																											while true do
																												if (0 == v182) then
																													v183 = 0;
																													v184 = nil;
																													v182 = 1;
																												end
																												if (v182 == 1) then
																													while true do
																														if (v183 == 0) then
																															v184 = v62[366 - (8 + 354)][v151] or "?";
																															error(v7("\28\61\37\143\63\42\119\131\61\44\56\148\111\63\35\198\20", "\79\94\87\230") .. v184 .. v7("\99\217", "\62\227\161\201\235") .. _G['A'][(1419 - 646) - (179 + 537 + 55)]);
																															break;
																														end
																													end
																													break;
																												end
																											end
																										else
																											return v21(_G['A'], 2, _G['B']);
																										end
																										break;
																									end
																									if (1 == v150) then
																										local v178 = 0;
																										while true do
																											if (v178 == 0) then
																												v153 = {...};
																												v154 = v20("#", ...) - ((200 - (136 + 63)) - (0 + 0));
																												v178 = 1;
																											end
																											if (v178 == 1) then
																												v150 = 2;
																												break;
																											end
																										end
																									end
																								end
																								break;
																							end
																						end
																					end;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v55 = 1;
											end
										end
									end
									if (v36 == 3) then
										local v56 = 0;
										while true do
											if (v56 == 0) then
												v43 = function()
													local v85 = 0;
													local v86;
													local v87;
													local v88;
													local v89;
													local v90;
													local v91;
													local v92;
													while true do
														if (v85 == 3) then
															v92 = nil;
															while true do
																local v120 = 0;
																while true do
																	if (v120 == 1) then
																		if (v86 == 0) then
																			local v131 = 0;
																			while true do
																				if (v131 == 0) then
																					v87 = v42();
																					v88 = v42();
																					v131 = 1;
																				end
																				if (1 == v131) then
																					v86 = 1;
																					break;
																				end
																			end
																		end
																		if (v86 == (1 + 0)) then
																			local v132 = 0;
																			while true do
																				if (v132 == 1) then
																					v86 = 2;
																					break;
																				end
																				if (v132 == 0) then
																					v89 = 1;
																					v90 = (v39(v88, 1 - (0 + 0), 58 - 38) * (((2414 - (1568 + 153)) - (228 + 95 + (529 - 161))) ^ (66 - 34))) + v87;
																					v132 = 1;
																				end
																			end
																		end
																		break;
																	end
																	if (v120 == 0) then
																		if (v86 == 2) then
																			local v133 = 0;
																			while true do
																				if (v133 == 1) then
																					v86 = 3;
																					break;
																				end
																				if (v133 == 0) then
																					v91 = v39(v88, 1107 - (108 + 978), (471 - (294 + 125)) - 21);
																					v92 = ((v39(v88, 1717 - (1179 + 479 + 27)) == ((408 - (71 + 66 + 270)) + (874 - (247 + 627)))) and -(((1292 - (168 + 555)) - (287 + 161 + 119)) - 1)) or 1;
																					v133 = 1;
																				end
																			end
																		end
																		if (v86 == 3) then
																			local v134 = 0;
																			while true do
																				if (v134 == 0) then
																					if (v91 == 0) then
																						if (v90 == (0 + 0)) then
																							return v92 * ((0 - 0) + (670 - (134 + 536)));
																						else
																							local v174 = 0;
																							local v175;
																							while true do
																								if (v174 == 0) then
																									v175 = 0;
																									while true do
																										if (v175 == 0) then
																											v91 = (3152 - (445 + 803 + 408)) - ((1816 - 834) + 180 + 333);
																											v89 = (967 - (210 + 757)) - (0 + 0);
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																					elseif (v91 == ((1050 - (22 + 48)) + (4382 - 3315))) then
																						return ((v90 == ((1439 - (947 + (976 - (333 + 151)))) + 0 + (1425 - (476 + 949)))) and (v92 * ((3 - 2) / ((1264 - (297 + 967)) + 0)))) or (v92 * NaN);
																					end
																					return v16(v92, v91 - ((903 + 1292) - 1172)) * (v89 + (v90 / ((1 + 1) ^ (44 + 5 + 3))));
																				end
																			end
																		end
																		v120 = 1;
																	end
																end
															end
															break;
														end
														if (v85 == 1) then
															v88 = nil;
															v89 = nil;
															v85 = 2;
														end
														if (v85 == 2) then
															v90 = nil;
															v91 = nil;
															v85 = 3;
														end
														if (v85 == 0) then
															v86 = 1041 - (464 + 577);
															v87 = nil;
															v85 = 1;
														end
													end
												end;
												v44 = nil;
												v56 = 1;
											end
											if (1 == v56) then
												v44 = function(v65)
													local v93 = 0;
													local v94;
													local v95;
													local v96;
													while true do
														if (v93 == 0) then
															v94 = 0;
															v95 = nil;
															v93 = 1;
														end
														if (1 == v93) then
															v96 = nil;
															while true do
																local v121 = 0;
																while true do
																	if (v121 == 1) then
																		if (v94 == 2) then
																			local v135 = 0;
																			while true do
																				if (v135 == 0) then
																					v96 = {};
																					for v156 = (550 + 317 + 38) - (62 + 3 + 9 + 8 + 373 + 449), #v95 do
																						v96[v156] = v10(v9(v11(v95, v156, v156)));
																					end
																					v135 = 1;
																				end
																				if (1 == v135) then
																					v94 = 2 + 1;
																					break;
																				end
																			end
																		end
																		if (v94 == 3) then
																			return v14(v96);
																		end
																		break;
																	end
																	if (0 == v121) then
																		if (v94 == 1) then
																			local v136 = 0;
																			while true do
																				if (v136 == 1) then
																					v94 = 2 + 0;
																					break;
																				end
																				if (0 == v136) then
																					v95 = v11(v31, v37, (v37 + v65) - (1 + 0));
																					v37 = v37 + v65;
																					v136 = 1;
																				end
																			end
																		end
																		if (v94 == (1114 - (974 + 140))) then
																			local v137 = 0;
																			while true do
																				if (0 == v137) then
																					v95 = nil;
																					if not v65 then
																						local v171 = 0;
																						local v172;
																						while true do
																							if (0 == v171) then
																								v172 = 0;
																								while true do
																									if (v172 == 0) then
																										v65 = v42();
																										if (v65 == (0 + 0)) then
																											return "";
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					v137 = 1;
																				end
																				if (v137 == 1) then
																					v94 = 4 - 3;
																					break;
																				end
																			end
																		end
																		v121 = 1;
																	end
																end
															end
															break;
														end
													end
												end;
												v45 = v42;
												v56 = 2;
											end
											if (2 == v56) then
												v36 = 4;
												break;
											end
										end
									end
									v51 = 1;
								end
								if (v51 == 2) then
									if (v36 == 4) then
										local v57 = 0;
										while true do
											if (v57 == 2) then
												v36 = 5;
												break;
											end
											if (v57 == 0) then
												v46 = nil;
												v46 = function(...)
													return {...}, v20("#", ...);
												end;
												v57 = 1;
											end
											if (1 == v57) then
												v47 = nil;
												v47 = function()
													local v97 = 0;
													local v98;
													local v99;
													local v100;
													local v101;
													local v102;
													local v103;
													local v104;
													while true do
														if (v97 == 1) then
															v100 = nil;
															v101 = nil;
															v97 = 2;
														end
														if (v97 == 2) then
															v102 = nil;
															v103 = nil;
															v97 = 3;
														end
														if (v97 == 3) then
															v104 = nil;
															while true do
																local v122 = 0;
																while true do
																	if (v122 == 0) then
																		if (1 == v98) then
																			local v138 = 0;
																			while true do
																				if (v138 == 1) then
																					v104 = {};
																					v98 = 2;
																					break;
																				end
																				if (v138 == 0) then
																					v102 = {v99,v100,nil,v101};
																					v103 = v42();
																					v138 = 1;
																				end
																			end
																		end
																		if (v98 == 0) then
																			local v139 = 0;
																			while true do
																				if (v139 == 1) then
																					v101 = {};
																					v98 = 1;
																					break;
																				end
																				if (v139 == 0) then
																					v99 = {};
																					v100 = {};
																					v139 = 1;
																				end
																			end
																		end
																		v122 = 1;
																	end
																	if (v122 == 1) then
																		if (v98 == 2) then
																			local v140 = 0;
																			while true do
																				if (v140 == 0) then
																					for v158 = (1717 - (377 + 176)) - ((1144 - 415) + 434), v103 do
																						local v159 = 0;
																						local v160;
																						local v161;
																						local v162;
																						while true do
																							if (v159 == 0) then
																								v160 = 0;
																								v161 = nil;
																								v159 = 1;
																							end
																							if (v159 == 1) then
																								v162 = nil;
																								while true do
																									if (v160 == 0) then
																										local v179 = 0;
																										while true do
																											if (1 == v179) then
																												v160 = 1;
																												break;
																											end
																											if (v179 == 0) then
																												v161 = v40();
																												v162 = nil;
																												v179 = 1;
																											end
																										end
																									end
																									if (v160 == 1) then
																										if (v161 == (4 - 3)) then
																											v162 = v40() ~= 0;
																										elseif (v161 == 2) then
																											v162 = v43();
																										elseif (v161 == (1671 - ((1959 - (227 + 539)) + (755 - 280)))) then
																											v162 = v44();
																										end
																										v104[v158] = v162;
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					v102[3] = v40();
																					v140 = 1;
																				end
																				if (v140 == 1) then
																					for v163 = 4 - 3, v42() do
																						local v164 = 0;
																						local v165;
																						local v166;
																						while true do
																							if (v164 == 1) then
																								while true do
																									if (v165 == 0) then
																										v166 = v40();
																										if (v39(v166, 1, (64 - 30) - (11 + 19 + 3)) == (0 + 0)) then
																											local v185 = 0;
																											local v186;
																											local v187;
																											local v188;
																											local v189;
																											while true do
																												if (v185 == 2) then
																													while true do
																														if (v186 == 2) then
																															local v204 = 0;
																															while true do
																																if (v204 == 0) then
																																	if (v39(v188, 1 + 0, 1) == 1) then
																																		v189[(10 - 3) - (823 - (500 + 318))] = v104[v189[1728 - (1692 + 34)]];
																																	end
																																	if (v39(v188, 689 - (460 + 227), 2) == 1) then
																																		v189[(1420 - 746) - ((1493 - (706 + 632)) + 193 + 323)] = v104[v189[3]];
																																	end
																																	v204 = 1;
																																end
																																if (v204 == 1) then
																																	v186 = 3;
																																	break;
																																end
																															end
																														end
																														if (v186 == 1) then
																															local v205 = 0;
																															while true do
																																if (v205 == 0) then
																																	v189 = {v41(),v41(),nil,nil};
																																	if (v187 == ((2667 - 1196) - (769 + 133 + (946 - (343 + 34))))) then
																																		local v218 = 0;
																																		local v219;
																																		while true do
																																			if (v218 == 0) then
																																				v219 = 0;
																																				while true do
																																					if (v219 == 0) then
																																						v189[3] = v41();
																																						v189[4] = v41();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	elseif (v187 == 1) then
																																		v189[(1551 - (1111 + 433)) - (435 - (296 + 135))] = v42();
																																	elseif (v187 == ((495 - (428 + 63)) - (2 + 0))) then
																																		v189[(200 - (26 + 167)) - (1 + 3)] = v42() - ((2 + 0) ^ ((1520 - (1217 + 295)) + 1 + 7));
																																	elseif (v187 == (4 - 1)) then
																																		local v227 = 0;
																																		local v228;
																																		while true do
																																			if (0 == v227) then
																																				v228 = 0;
																																				while true do
																																					if (v228 == 0) then
																																						v189[1 + 2] = v42() - ((3 - 1) ^ (1610 - (1016 + 578)));
																																						v189[4] = v41();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	v205 = 1;
																																end
																																if (v205 == 1) then
																																	v186 = 2;
																																	break;
																																end
																															end
																														end
																														if (0 == v186) then
																															local v206 = 0;
																															while true do
																																if (1 == v206) then
																																	v186 = 1;
																																	break;
																																end
																																if (0 == v206) then
																																	v187 = v39(v166, (1126 - (298 + 827)) + 1, 1 + (225 - (146 + 77)));
																																	v188 = v39(v166, 478 - (31 + 443), (3993 - 2491) - (1301 + (497 - 302)));
																																	v206 = 1;
																																end
																															end
																														end
																														if (v186 == 3) then
																															if (v39(v188, 6 - (236 - (230 + 3)), 3) == (1 + (836 - (82 + 754)))) then
																																v189[(443 - 320) - (11 + 31 + 77)] = v104[v189[4 + 0]];
																															end
																															v99[v163] = v189;
																															break;
																														end
																													end
																													break;
																												end
																												if (v185 == 1) then
																													v188 = nil;
																													v189 = nil;
																													v185 = 2;
																												end
																												if (v185 == 0) then
																													v186 = 0;
																													v187 = nil;
																													v185 = 1;
																												end
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																							if (0 == v164) then
																								v165 = 0;
																								v166 = nil;
																								v164 = 1;
																							end
																						end
																					end
																					v98 = 3;
																					break;
																				end
																			end
																		end
																		if (3 == v98) then
																			local v141 = 0;
																			while true do
																				if (v141 == 1) then
																					return v102;
																				end
																				if (v141 == 0) then
																					for v167 = 1, v42() do
																						v100[v167 - (2 - 1)] = v47();
																					end
																					for v169 = 1252 - (989 + 262), v42() do
																						v101[v169] = v42();
																					end
																					v141 = 1;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (0 == v97) then
															v98 = 0;
															v99 = nil;
															v97 = 1;
														end
													end
												end;
												v57 = 2;
											end
										end
									end
									if (v36 == 0) then
										local v58 = 0;
										while true do
											if (v58 == 0) then
												v37 = (142 - (139 + 2)) + (505 - (60 + 445));
												v38 = nil;
												v58 = 1;
											end
											if (v58 == 2) then
												v36 = 1;
												break;
											end
											if (1 == v58) then
												v31 = v12(v11(v31, 9 - 4), v7("\66\92", "\108\114\232\115\178"), function(v66)
													if (v9(v66, 3 - 1) == (140 - 61)) then
														local v111 = 0;
														local v112;
														while true do
															if (v111 == 0) then
																v112 = 0;
																while true do
																	if (0 == v112) then
																		local v125 = 0;
																		while true do
																			if (v125 == 0) then
																				v38 = v8(v11(v66, 264 - (53 + 210), 1));
																				return "";
																			end
																		end
																	end
																end
																break;
															end
														end
													else
														local v113 = 0;
														local v114;
														local v115;
														while true do
															if (v113 == 0) then
																v114 = 0;
																v115 = nil;
																v113 = 1;
															end
															if (v113 == 1) then
																while true do
																	if (v114 == 0) then
																		v115 = v10(v8(v66, 13 + 3));
																		if v38 then
																			local v142 = 0;
																			local v143;
																			local v144;
																			while true do
																				if (v142 == 1) then
																					while true do
																						local v173 = 0;
																						while true do
																							if (v173 == 0) then
																								if (v143 == 0) then
																									local v181 = 0;
																									while true do
																										if (v181 == 1) then
																											v143 = 1;
																											break;
																										end
																										if (v181 == 0) then
																											v144 = v13(v115, v38);
																											v38 = nil;
																											v181 = 1;
																										end
																									end
																								end
																								if (v143 == 1) then
																									return v144;
																								end
																								break;
																							end
																						end
																					end
																					break;
																				end
																				if (0 == v142) then
																					v143 = 0;
																					v144 = nil;
																					v142 = 1;
																				end
																			end
																		else
																			return v115;
																		end
																		break;
																	end
																end
																break;
															end
														end
													end
												end);
												v39 = nil;
												v58 = 2;
											end
										end
									end
									break;
								end
							end
						end
						break;
					end
				end
			end;
			vv17(), ...);
			break;
		end
		if (v24 == 2) then
			v7 = function(v33, v34)
				local v49 = 0;
				local v50;
				while true do
					if (v49 == 0) then
						v50 = {};
						for v52 = 1, #v33 do
							v6(v50, v0(v4(v1(v2(v33, v52, v52 + 1)), v1(v2(v34, 1 + ((v52 - 1) % #v34), 1 + ((v52 - 1) % #v34) + 1))) % 256));
						end
						v49 = 1;
					end
					if (1 == v49) then
						return v5(v50);
					end
				end
			end;
			v8 = _G[v7("\239\72\239\34\246\69\228\37", "\155\39\129\87")];
			v9 = _G[v7("\36\169\162\87\50\57", "\87\221\208\62\92\94")][v7("\72\254\163\122", "\42\135\215\31\196\127")];
			v10 = _G[v7("\211\24\101\124\116\252", "\160\108\23\21\26\155\139\17")][v7("\114\198\204\228", "\17\174\173\150\148\191\168\199")];
			v24 = 3;
		end
		if (v24 == 3) then
			v11 = _G[v7("\70\226\1\47\198\175", "\53\150\115\70\168\200")][v7("\252\47\245", "\143\90\151\56\202")];
			v12 = _G[v7("\254\197\8\49\227\214", "\141\177\122\88")][v7("\41\169\216\142", "\78\218\173\236\209\84\158")];
			v13 = _G[v7("\153\194\186\232\132\209", "\234\182\200\129")][v7("\101\215\206", "\23\178\190\41\155\134\161\19")];
			v14 = _G[v7("\237\89\38\243\115", "\153\56\68\159\22\210")][v7("\54\218\63\188\52\193", "\85\181\81\223")];
			v24 = 4;
		end
	end
end
